<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.vorburger.modudemo</groupId>
	<artifactId>modudemo-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<organization>
		<name>Michael Vorburger</name>
		<url>http://www.vorburger.ch</url>
	</organization>

	<modules>
		<module>ch.vorburger.modudemo.testutils/pom.xml</module>
		<module>ch.vorburger.modudemo.server/pom.xml</module>
		<module>ch.vorburger.modudemo.core/pom.xml</module>
		<!-- <module>ch.vorburger.modudemo.core-web/pom.xml</module> -->

		<module>ch.vorburger.modudemo.core-war/pom.xml</module>
		<!-- Does not work yet: <module>ch.vorburger.modudemo.server-assembly/pom.xml</module> -->

		<module>ch.vorburger.modudemo.ext1/pom.xml</module>
		<module>ch.vorburger.modudemo.package-core-ext1-war/pom.xml</module>
	</modules>

	<properties>
		<!-- See pom.xml.readme.txt; by default, build dir is CLI Maven's 'target' 
			directory -->
		<varying.target.dir>target</varying.target.dir>
	</properties>

	<build>
		<directory>${basedir}/${varying.target.dir}</directory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- <debugForkedProcess>true</debugForkedProcess> -->
					<!-- <argLine>-D.DEBUG=true</argLine> -->

					<!-- Jetty won't find our resources if we don't use EITHER <useSystemClassLoader>false</useSystemClassLoader> 
						(which seems better), OR <forkMode>never</forkMode> : @see http://maven.apache.org/plugins/maven-surefire-plugin/examples/class-loading.html -->
					<!-- <forkMode>never</forkMode> -->
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>eclipse-folders</id>
			<activation>
				<property>
					<!-- This property is automatically when running under m2e (no need 
						for Project Properties > Maven > Active Maven Profiles -->
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<!-- See pom.xml.readme.txt; override in case we're running inside Eclipse. 
					This directory HAS TO MATCH what is in an Eclipse project's .classpath -->
				<varying.target.dir>target-eclipse</varying.target.dir>
			</properties>
		</profile>

		<profile>
			<!-- See pom.xml.readme.txt for what this is all about... -->
			<id>m2e</id>
			<activation>
				<property>
					<!-- This property is automatically when running under m2e (no need 
						for Project Properties > Maven > Active Maven Profiles -->
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.maven.ide.eclipse</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>0.10.0</version>
						<configuration>
							<mappingId>customizable</mappingId>
							<configurators>
								<configurator id='org.maven.ide.eclipse.jdt.javaConfigurator' />
							</configurators>
							<!-- Actually, no thank you very much, do not copy resources for me! 
								(It slows down and doesn't even work well anyway...) <mojoExecutions> <mojoExecution>org.apache.maven.plugins:maven-resources-plugin::</mojoExecution> 
								</mojoExecutions> -->
						</configuration>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<!-- Actually if we don't do <mojoExecution>org.apache.maven.plugins:maven-resources-plugin::</mojoExecution> 
							above, then we also don't really have to fix the maven-resources-plugin version 
							here... <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId> 
							<version>2.4</version> </plugin> -->
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<!-- These are here simply so that this overall multi-modules project's 
				inner dependencies among it's modules don't have to duplicate <version> -->
			<dependency>
				<groupId>ch.vorburger.modudemo</groupId>
				<artifactId>testutils</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.vorburger.modudemo</groupId>
				<artifactId>core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.vorburger.modudemo</groupId>
				<artifactId>core-web</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.vorburger.modudemo</groupId>
				<artifactId>core-war</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>ch.vorburger.modudemo</groupId>
				<artifactId>ext1</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- External dependencies used by several modules (version should be 
				here only, never in modules) -->
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>servlet-api</artifactId>
				<version>3.0.20100224</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.15</version>
				<exclusions>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>oss.sonatype.org</id>
			<name>oss.sonatype.org</name>
			<url>http://oss.sonatype.org/content/groups/jetty/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>